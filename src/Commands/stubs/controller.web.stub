<?php

namespace App\Http\Controllers\WEB;

use App\Http\Controllers\Controller;
use App\Http\Requests\{modelName}\StoreUpdate{modelName}Request;
use App\Models\{modelName};
use App\Services\{modelName}\I{modelName}Service;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Illuminate\Foundation\Application;
use Illuminate\Http\JsonResponse as JsonResponseAlias;
use Illuminate\Http\RedirectResponse as RedirectResponseAlias;
use Illuminate\Routing\Redirector;
use Yajra\DataTables\Facades\DataTables;

class {modelName}Controller extends Controller
{
    private ${modelLowerName}Service;

    public function __construct(I{modelName}Service ${modelLowerName}Service)
    {
        $this->{modelLowerName}Service = ${modelLowerName}Service;
    }

   
    public function data()
    {
        ${modelLowerPluralName} = {modelName}::query();


        return DataTables::eloquent(${modelLowerPluralName})
            {columns}
            ->addColumn('action', function (${modelLowerName}) {
                return "
                    <div class='d-flex'>
                        <a href='" . route('{showRouteName}', ${modelLowerName}->id) . "' class='btn btn-xs btn-info'>
                            <i class='bi bi-chevron-bar-right'></i>
                        </a>
                        <button type='button' class='btn btn-xs btn-danger remove-item-from-table-btn'
                                data-deleteurl ='" . route('{deleteRouteName}', ${modelLowerName}->id) . "' >
                            <i class='bi bi-trash3-fill'></i>
                        </button>
                    </div>";
            })
            ->toJson();
    }


    public function index()
    {
        return view('{indexView}');
    }

    public function create()
    {
        return view('{createForm}');
    }

    public function show(${modelLowerName}_id)
    {
        ${modelLowerName} = $this->{modelLowerName}Service->view(${modelLowerName}_id, []);
        if (${modelLowerName}) {
            return view('{showView}', compact('{modelLowerName}'));
        }
        abort(404, 'Item Not Found');
    }

    public function store(StoreUpdate{modelName}Request $request)
    {
        ${modelLowerName} = $this->{modelLowerName}Service->store($request->validated(), []);
        if (${modelLowerName}) {
            return redirect()->route('{showRouteName}', ${modelLowerName}->id);
        }
        abort(500);
    }

    public function edit(${modelLowerName}_id)
    {
        ${modelLowerName} = ${modelLowerName} = $this->{modelLowerName}Service->view(${modelLowerName}_id, []);
        
        if (${modelLowerName}) {
            return view('{editForm}', compact(['{modelLowerName}']));
        }

         abort(404) ; 
    }

    public function update(StoreUpdate{modelName}Request $request, ${modelLowerName}_id)
    {
        ${modelLowerName} = $this->{modelLowerName}Service->update($request->validated(), ${modelLowerName}_id, []);
        if (${modelLowerName}) {
            return redirect()->route('{editRouteName}', ${modelLowerName}_id);
        }
        else abort(404) ; 
    }

    public function destroy(${modelLowerName}_id)
    {
        ${modelLowerName} = $this->{modelLowerName}Service->delete(${modelLowerName}_id);

        if (${modelLowerName}) {
            return redirect()->route('{indexRouteName}') ;
        }

        abort(404) ;
    }
}
