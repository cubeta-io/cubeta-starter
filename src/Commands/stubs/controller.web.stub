<?php

namespace {namespace};

use App\Http\Controllers\Controller;
use {requestNamespace}\{modelName}\StoreUpdate{modelName}Request;
use {modelNamespace}\{modelName};
use {serviceNamespace}\{modelName}\I{modelName}Service;
use Yajra\DataTables\Facades\DataTables;

class {modelName}Controller extends Controller
{
    private ${modelNameCamelCase}Service;

    public function __construct(I{modelName}Service ${modelNameCamelCase}Service)
    {
        $this->{modelNameCamelCase}Service = ${modelNameCamelCase}Service;
    }


    /**
     * @throws \Exception
     */
    public function data()
    {
        $data = {modelName}::query()->select('{tableName}.*');

        return DataTables::eloquent($data)
            ->addColumn('action', function ($row) {
                return "
                    <div class='d-flex'>
                        <div class='p-1'>
                            <a href='" . route('{showRouteName}', $row->id) . "' class='btn btn-xs btn-info'>
                                <i class='bi bi-chevron-bar-right'></i>
                            </a>
                        </div>
                        <div class='p-1'>
                            <button type='button' class='btn btn-xs btn-danger remove-item-from-table-btn'
                                    data-deleteurl ='" . route('{deleteRouteName}', $row->id) . "' >
                                <i class='bi bi-trash3-fill'></i>
                            </button>
                        </div>
                    </div>";
            })
            ->make(true);
    }


    public function index()
    {
        return view('{indexView}');
    }

    public function create()
    {
        return view('{createForm}');
    }

    public function show(${modelNameCamelCase}_id)
    {
        ${modelNameCamelCase} = $this->{modelNameCamelCase}Service->view(${modelNameCamelCase}_id, []);
        if (${modelNameCamelCase}) {
            return view('{showView}', compact('{modelNameCamelCase}'));
        }
        abort(404, 'Item Not Found');
    }

    public function store(StoreUpdate{modelName}Request $request)
    {
        ${modelNameCamelCase} = $this->{modelNameCamelCase}Service->store($request->validated(), []);
        if (${modelNameCamelCase}) {
            return redirect()->route('{showRouteName}', ${modelNameCamelCase}->id);
        }
        abort(500);
    }

    public function edit(${modelNameCamelCase}_id)
    {
        ${modelNameCamelCase} = ${modelNameCamelCase} = $this->{modelNameCamelCase}Service->view(${modelNameCamelCase}_id, []);

        if (${modelNameCamelCase}) {
            return view('{editForm}', compact(['{modelNameCamelCase}']));
        }

         abort(404) ;
    }

    public function update(StoreUpdate{modelName}Request $request, ${modelNameCamelCase}_id)
    {
        ${modelNameCamelCase} = $this->{modelNameCamelCase}Service->update($request->validated(), ${modelNameCamelCase}_id, []);
        if (${modelNameCamelCase}) {
            return redirect()->route('{editRouteName}', ${modelNameCamelCase}_id);
        }
        else abort(404) ;
    }

    public function destroy(${modelNameCamelCase}_id)
    {
        ${modelNameCamelCase} = $this->{modelNameCamelCase}Service->delete(${modelNameCamelCase}_id);

        if (${modelNameCamelCase}) {
            return response()->json(['message' => 'deleted successfully']) ;
        }

        abort(404) ;
    }
}
