<?php

namespace App\Http\Middleware;

use Closure;
use Exception;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use {{trait_namespace}}\RestTrait;
use Illuminate\Support\Facades\Log;
use App\Http\Controllers\ApiController;
use PHPOpenSourceSaver\JWTAuth\Facades\JWTAuth;
use PHPOpenSourceSaver\JWTAuth\Exceptions\TokenExpiredException;

class JWTAuthMiddleware
{
    use RestTrait;

    /**
     * @param Request $request
     * @param Closure $next
     * @return JsonResponse|mixed
     */
    public function handle(Request $request, Closure $next): mixed
    {
        try {
            $user = JWTAuth::parseToken()->authenticate();
        } catch (TokenExpiredException $exception) {
            return $this->apiResponse(null, ApiController::TOKEN_EXPIRATION, __('site.token_expired'));
        } catch (Exception $exception) {
            Log::info($exception->getMessage());
        }

        return $next($request);
    }
}
